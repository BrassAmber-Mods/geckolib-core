apply plugin: 'java'
apply plugin: 'maven-publish'

group project.group
def snapshotVersion = System.getenv("GITHUB_RUN_NUMBER")
version = snapshotVersion == null ? project.version : "SNAPSHOT-" + snapshotVersion
archivesBaseName = project.archivesBaseName

repositories {
    mavenCentral()
    maven { url 'https://repo.repsy.io/mvn/fadookie/particleman' }
}

dependencies {
    compile 'com.eliotlash.molang:molang:SNAPSHOT.12'
    compile 'com.eliotlash.mclib:mclib:SNAPSHOT.12'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
}

jar {
    from sourceSets.main.allSource
    manifest {
        attributes([
                "FMLModType"              : "LIBRARY",
                "Specification-Title"     : "geckolib",
                "Specification-Vendor"    : "geckolib",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "geckolib",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifactId = project.archivesBaseName
        }
    }
}

publishing {
    repositories {
        maven {
            url repsyUrl
            credentials {
                def envUsername = System.getenv("repsyUsername")
                def envPassword = System.getenv("repsyPassword")
                username = envUsername == null ? findProperty("repsyUsername") : envUsername
                password = envPassword == null ? findProperty("repsyPassword") : envPassword
            }
        }
    }
}

